import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ReserveRegressionTest1 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        User user30 = null;
        Room room31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = reserveRoom20.reserveRoom(user30, room31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        java.lang.Class<?> wildcardClass20 = reserveRoom3.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        java.lang.Class<?> wildcardClass39 = reserveRoom36.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass47 = reserveRoom46.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        User user20 = null;
        Room room21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = reserveRoom13.reserveRoom(user20, room21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user49 = null;
        Room room50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = reserveRoom48.reserveRoom(user49, room50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        User user18 = null;
        Room room19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = reserveRoom13.reserveRoom(user18, room19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass48 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass49 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom34.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        User user23 = null;
        Room room24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = reserveRoom18.reserveRoom(user23, room24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom41.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        java.lang.Class<?> wildcardClass23 = reserveRoom16.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        java.lang.Class<?> wildcardClass22 = reserveRoom10.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom39.displayAvailableRooms();
        User user41 = null;
        Room room42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = reserveRoom39.reserveRoom(user41, room42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        java.lang.Class<?> wildcardClass30 = reserveRoom27.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        java.lang.Class<?> wildcardClass29 = reserveRoom23.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass21 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass21 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass50 = reserveRoom49.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom11.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom39.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        User user18 = null;
        Room room19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = reserveRoom6.reserveRoom(user18, room19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        java.lang.Class<?> wildcardClass49 = reserveRoom47.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom25.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom25.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        User user27 = null;
        Room room28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = reserveRoom17.reserveRoom(user27, room28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        User user37 = null;
        Room room38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = reserveRoom31.reserveRoom(user37, room38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        java.lang.Class<?> wildcardClass48 = reserveRoom41.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        java.lang.Class<?> wildcardClass43 = reserveRoom41.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        User user28 = null;
        Room room29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = reserveRoom11.reserveRoom(user28, room29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        java.lang.Class<?> wildcardClass19 = reserveRoom3.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        User user33 = null;
        Room room34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = reserveRoom24.reserveRoom(user33, room34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        User user29 = null;
        Room room30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = reserveRoom11.reserveRoom(user29, room30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user43 = null;
        Room room44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = reserveRoom42.reserveRoom(user43, room44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        User user16 = null;
        Room room17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = reserveRoom9.reserveRoom(user16, room17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        User user28 = null;
        Room room29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = reserveRoom17.reserveRoom(user28, room29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom38.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        User user43 = null;
        Room room44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = reserveRoom38.reserveRoom(user43, room44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass45 = reserveRoom44.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        User user13 = null;
        Room room14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = reserveRoom4.reserveRoom(user13, room14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom20.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        User user36 = null;
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = reserveRoom31.reserveRoom(user36, room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom53.displayAvailableRooms();
        java.lang.Class<?> wildcardClass55 = reserveRoom53.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass51 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        User user36 = null;
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = reserveRoom33.reserveRoom(user36, room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        User user44 = null;
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = reserveRoom42.reserveRoom(user44, room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass46 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom39.displayAvailableRooms();
        reserveRoom39.displayAvailableRooms();
        java.lang.Class<?> wildcardClass42 = reserveRoom39.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom21.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass54 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        java.lang.Class<?> wildcardClass24 = reserveRoom19.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        User user17 = null;
        Room room18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = reserveRoom9.reserveRoom(user17, room18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass19 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        User user18 = null;
        Room room19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = reserveRoom12.reserveRoom(user18, room19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user55 = null;
        Room room56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = reserveRoom54.reserveRoom(user55, room56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        User user20 = null;
        Room room21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = reserveRoom16.reserveRoom(user20, room21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom14.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        User user17 = null;
        Room room18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = reserveRoom7.reserveRoom(user17, room18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        User user44 = null;
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = reserveRoom38.reserveRoom(user44, room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom46.displayAvailableRooms();
        java.lang.Class<?> wildcardClass48 = reserveRoom46.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass52 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass55 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        User user23 = null;
        Room room24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = reserveRoom16.reserveRoom(user23, room24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass39 = reserveRoom38.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        User user34 = null;
        Room room35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = reserveRoom24.reserveRoom(user34, room35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        java.lang.Class<?> wildcardClass40 = reserveRoom36.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass53 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom18.displayAvailableRooms();
        java.lang.Class<?> wildcardClass20 = reserveRoom18.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        User user21 = null;
        Room room22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = reserveRoom12.reserveRoom(user21, room22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        User user28 = null;
        Room room29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = reserveRoom21.reserveRoom(user28, room29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user45 = null;
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = reserveRoom44.reserveRoom(user45, room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom45.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom17.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass49 = reserveRoom48.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass54 = reserveRoom53.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        java.lang.Class<?> wildcardClass20 = reserveRoom10.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user53 = null;
        Room room54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = reserveRoom52.reserveRoom(user53, room54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        java.lang.Class<?> wildcardClass40 = reserveRoom35.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass24 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        java.lang.Class<?> wildcardClass21 = reserveRoom3.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        User user19 = null;
        Room room20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = reserveRoom6.reserveRoom(user19, room20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom23.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user54 = null;
        Room room55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = reserveRoom53.reserveRoom(user54, room55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        java.lang.Class<?> wildcardClass14 = reserveRoom4.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        java.lang.Class<?> wildcardClass36 = reserveRoom30.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        User user47 = null;
        Room room48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = reserveRoom45.reserveRoom(user47, room48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        java.lang.Class<?> wildcardClass46 = reserveRoom41.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom31.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        User user34 = null;
        Room room35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = reserveRoom26.reserveRoom(user34, room35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        java.lang.Class<?> wildcardClass19 = reserveRoom6.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        User user38 = null;
        Room room39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = reserveRoom32.reserveRoom(user38, room39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass38 = reserveRoom37.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        java.lang.Class<?> wildcardClass17 = reserveRoom9.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        java.lang.Class<?> wildcardClass35 = reserveRoom31.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom30.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        User user43 = null;
        Room room44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = reserveRoom37.reserveRoom(user43, room44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        java.lang.Class<?> wildcardClass13 = reserveRoom7.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom35.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        java.lang.Class<?> wildcardClass30 = reserveRoom11.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        User user35 = null;
        Room room36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = reserveRoom28.reserveRoom(user35, room36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        User user48 = null;
        Room room49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = reserveRoom41.reserveRoom(user48, room49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        java.lang.Class<?> wildcardClass36 = reserveRoom31.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        User user44 = null;
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = reserveRoom41.reserveRoom(user44, room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        java.lang.Class<?> wildcardClass45 = reserveRoom38.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        User user39 = null;
        Room room40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = reserveRoom36.reserveRoom(user39, room40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        java.lang.Class<?> wildcardClass43 = reserveRoom40.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        java.lang.Class<?> wildcardClass25 = reserveRoom19.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        User user36 = null;
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = reserveRoom24.reserveRoom(user36, room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass44 = reserveRoom43.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom14.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        java.lang.Class<?> wildcardClass38 = reserveRoom32.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom39.displayAvailableRooms();
        reserveRoom39.displayAvailableRooms();
        reserveRoom39.displayAvailableRooms();
        User user43 = null;
        Room room44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = reserveRoom39.reserveRoom(user43, room44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        User user30 = null;
        Room room31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = reserveRoom11.reserveRoom(user30, room31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        User user22 = null;
        Room room23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = reserveRoom12.reserveRoom(user22, room23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom19.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        User user41 = null;
        Room room42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = reserveRoom35.reserveRoom(user41, room42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        java.lang.Class<?> wildcardClass43 = reserveRoom37.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        User user44 = null;
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = reserveRoom37.reserveRoom(user44, room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        java.lang.Class<?> wildcardClass43 = reserveRoom38.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass23 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        User user39 = null;
        Room room40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = reserveRoom37.reserveRoom(user39, room40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        java.lang.Class<?> wildcardClass18 = reserveRoom9.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom46.displayAvailableRooms();
        reserveRoom46.displayAvailableRooms();
        java.lang.Class<?> wildcardClass49 = reserveRoom46.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        User user51 = null;
        Room room52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = reserveRoom47.reserveRoom(user51, room52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass57 = reserveRoom56.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        User user48 = null;
        Room room49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = reserveRoom45.reserveRoom(user48, room49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom15.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        java.lang.Class<?> wildcardClass18 = reserveRoom7.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        java.lang.Class<?> wildcardClass45 = reserveRoom40.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass55 = reserveRoom54.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        java.lang.Class<?> wildcardClass31 = reserveRoom11.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        User user34 = null;
        Room room35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = reserveRoom28.reserveRoom(user34, room35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass52 = reserveRoom51.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom53.displayAvailableRooms();
        User user55 = null;
        Room room56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = reserveRoom53.reserveRoom(user55, room56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        java.lang.Class<?> wildcardClass33 = reserveRoom24.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        java.lang.Class<?> wildcardClass49 = reserveRoom45.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        java.lang.Class<?> wildcardClass39 = reserveRoom31.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom29.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass22 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user57 = null;
        Room room58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = reserveRoom56.reserveRoom(user57, room58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        User user27 = null;
        Room room28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = reserveRoom21.reserveRoom(user27, room28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        java.lang.Class<?> wildcardClass44 = reserveRoom37.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        User user38 = null;
        Room room39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = reserveRoom34.reserveRoom(user38, room39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user52 = null;
        Room room53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = reserveRoom51.reserveRoom(user52, room53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom36.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom55.displayAvailableRooms();
        User user57 = null;
        Room room58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = reserveRoom55.reserveRoom(user57, room58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        User user30 = null;
        Room room31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = reserveRoom23.reserveRoom(user30, room31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        java.lang.Class<?> wildcardClass36 = reserveRoom24.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        User user36 = null;
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = reserveRoom30.reserveRoom(user36, room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        java.lang.Class<?> wildcardClass15 = reserveRoom9.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom15.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        java.lang.Class<?> wildcardClass41 = reserveRoom35.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        java.lang.Class<?> wildcardClass41 = reserveRoom38.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        User user35 = null;
        Room room36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = reserveRoom24.reserveRoom(user35, room36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        User user45 = null;
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = reserveRoom42.reserveRoom(user45, room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        User user31 = null;
        Room room32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = reserveRoom20.reserveRoom(user31, room32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom46.displayAvailableRooms();
        reserveRoom46.displayAvailableRooms();
        User user49 = null;
        Room room50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = reserveRoom46.reserveRoom(user49, room50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        User user45 = null;
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = reserveRoom37.reserveRoom(user45, room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user51 = null;
        Room room52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = reserveRoom50.reserveRoom(user51, room52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        java.lang.Class<?> wildcardClass35 = reserveRoom32.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        User user23 = null;
        Room room24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = reserveRoom10.reserveRoom(user23, room24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        java.lang.Class<?> wildcardClass31 = reserveRoom20.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        User user30 = null;
        Room room31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = reserveRoom24.reserveRoom(user30, room31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        User user38 = null;
        Room room39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = reserveRoom31.reserveRoom(user38, room39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        java.lang.Class<?> wildcardClass45 = reserveRoom42.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom21.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        java.lang.Class<?> wildcardClass19 = reserveRoom14.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        User user45 = null;
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = reserveRoom41.reserveRoom(user45, room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom46.displayAvailableRooms();
        reserveRoom46.displayAvailableRooms();
        reserveRoom46.displayAvailableRooms();
        java.lang.Class<?> wildcardClass50 = reserveRoom46.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        User user15 = null;
        Room room16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = reserveRoom7.reserveRoom(user15, room16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom46.displayAvailableRooms();
        reserveRoom46.displayAvailableRooms();
        reserveRoom46.displayAvailableRooms();
        User user50 = null;
        Room room51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = reserveRoom46.reserveRoom(user50, room51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        User user18 = null;
        Room room19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = reserveRoom9.reserveRoom(user18, room19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass50 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        java.lang.Class<?> wildcardClass46 = reserveRoom42.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        User user61 = null;
        Room room62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = reserveRoom59.reserveRoom(user61, room62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        User user30 = null;
        Room room31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = reserveRoom17.reserveRoom(user30, room31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom37.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        java.lang.Class<?> wildcardClass48 = reserveRoom45.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass59 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass57 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass44 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        java.lang.Class<?> wildcardClass21 = reserveRoom13.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        java.lang.Class<?> wildcardClass16 = reserveRoom9.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        java.lang.Class<?> wildcardClass36 = reserveRoom32.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass25 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        java.lang.Class<?> wildcardClass24 = reserveRoom16.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass46 = reserveRoom45.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        java.lang.Class<?> wildcardClass34 = reserveRoom30.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        User user18 = null;
        Room room19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = reserveRoom3.reserveRoom(user18, room19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        java.lang.Class<?> wildcardClass61 = reserveRoom59.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        User user49 = null;
        Room room50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = reserveRoom47.reserveRoom(user49, room50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        User user23 = null;
        Room room24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = reserveRoom12.reserveRoom(user23, room24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        User user59 = null;
        Room room60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = reserveRoom57.reserveRoom(user59, room60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        java.lang.Class<?> wildcardClass35 = reserveRoom28.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom50.displayAvailableRooms();
        java.lang.Class<?> wildcardClass52 = reserveRoom50.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom22.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom17.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        User user29 = null;
        Room room30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = reserveRoom21.reserveRoom(user29, room30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        java.lang.Class<?> wildcardClass47 = reserveRoom45.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        java.lang.Class<?> wildcardClass23 = reserveRoom10.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        User user29 = null;
        Room room30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = reserveRoom17.reserveRoom(user29, room30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        java.lang.Class<?> wildcardClass15 = reserveRoom5.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        java.lang.Class<?> wildcardClass45 = reserveRoom37.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        java.lang.Class<?> wildcardClass30 = reserveRoom23.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom19.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user61 = null;
        Room room62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = reserveRoom60.reserveRoom(user61, room62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom20.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom56.displayAvailableRooms();
        User user58 = null;
        Room room59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = reserveRoom56.reserveRoom(user58, room59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        User user45 = null;
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = reserveRoom40.reserveRoom(user45, room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        User user21 = null;
        Room room22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = reserveRoom3.reserveRoom(user21, room22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        User user16 = null;
        Room room17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = reserveRoom3.reserveRoom(user16, room17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        User user19 = null;
        Room room20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = reserveRoom3.reserveRoom(user19, room20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        User user45 = null;
        Room room46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = reserveRoom38.reserveRoom(user45, room46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom15.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        User user61 = null;
        Room room62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = reserveRoom58.reserveRoom(user61, room62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        java.lang.Class<?> wildcardClass52 = reserveRoom47.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        java.lang.Class<?> wildcardClass29 = reserveRoom21.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        java.lang.Class<?> wildcardClass45 = reserveRoom41.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        User user52 = null;
        Room room53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = reserveRoom49.reserveRoom(user52, room53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom54.displayAvailableRooms();
        User user56 = null;
        Room room57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = reserveRoom54.reserveRoom(user56, room57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        java.lang.Class<?> wildcardClass30 = reserveRoom17.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom31.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass60 = reserveRoom59.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom17.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom48.displayAvailableRooms();
        java.lang.Class<?> wildcardClass50 = reserveRoom48.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user58 = null;
        Room room59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = reserveRoom57.reserveRoom(user58, room59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        User user37 = null;
        Room room38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = reserveRoom29.reserveRoom(user37, room38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        User user31 = null;
        Room room32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = reserveRoom27.reserveRoom(user31, room32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom52.displayAvailableRooms();
        java.lang.Class<?> wildcardClass54 = reserveRoom52.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        User user36 = null;
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = reserveRoom28.reserveRoom(user36, room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        java.lang.Class<?> wildcardClass42 = reserveRoom35.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass53 = reserveRoom52.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        User user12 = null;
        Room room13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = reserveRoom4.reserveRoom(user12, room13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom10.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        java.lang.Class<?> wildcardClass47 = reserveRoom41.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user50 = null;
        Room room51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = reserveRoom49.reserveRoom(user50, room51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom16.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        java.lang.Class<?> wildcardClass61 = reserveRoom57.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass51 = reserveRoom50.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        java.lang.Class<?> wildcardClass38 = reserveRoom33.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom19.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        User user53 = null;
        Room room54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = reserveRoom49.reserveRoom(user53, room54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        User user42 = null;
        Room room43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = reserveRoom35.reserveRoom(user42, room43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        User user21 = null;
        Room room22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = reserveRoom13.reserveRoom(user21, room22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom32.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        User user47 = null;
        Room room48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = reserveRoom40.reserveRoom(user47, room48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass62 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        java.lang.Class<?> wildcardClass36 = reserveRoom33.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        java.lang.Class<?> wildcardClass25 = reserveRoom10.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        User user60 = null;
        Room room61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = reserveRoom58.reserveRoom(user60, room61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass62 = reserveRoom61.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        User user50 = null;
        Room room51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = reserveRoom47.reserveRoom(user50, room51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        java.lang.Class<?> wildcardClass13 = reserveRoom4.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom63.displayAvailableRooms();
        User user65 = null;
        Room room66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = reserveRoom63.reserveRoom(user65, room66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user59 = null;
        Room room60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = reserveRoom58.reserveRoom(user59, room60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user62 = null;
        Room room63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = reserveRoom61.reserveRoom(user62, room63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        User user62 = null;
        Room room63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = reserveRoom58.reserveRoom(user62, room63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom56.displayAvailableRooms();
        java.lang.Class<?> wildcardClass58 = reserveRoom56.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom25.displayAvailableRooms();
        reserveRoom25.displayAvailableRooms();
        User user28 = null;
        Room room29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = reserveRoom25.reserveRoom(user28, room29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass61 = reserveRoom60.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom38.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        User user38 = null;
        Room room39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = reserveRoom33.reserveRoom(user38, room39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom17.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        reserveRoom6.displayAvailableRooms();
        User user20 = null;
        Room room21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = reserveRoom6.reserveRoom(user20, room21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        User user35 = null;
        Room room36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = reserveRoom26.reserveRoom(user35, room36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        java.lang.Class<?> wildcardClass64 = reserveRoom59.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        java.lang.Class<?> wildcardClass60 = reserveRoom57.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        java.lang.Class<?> wildcardClass38 = reserveRoom29.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        java.lang.Class<?> wildcardClass47 = reserveRoom42.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom50.displayAvailableRooms();
        User user52 = null;
        Room room53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = reserveRoom50.reserveRoom(user52, room53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom56.displayAvailableRooms();
        reserveRoom56.displayAvailableRooms();
        User user59 = null;
        Room room60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = reserveRoom56.reserveRoom(user59, room60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        java.lang.Class<?> wildcardClass38 = reserveRoom34.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        java.lang.Class<?> wildcardClass34 = reserveRoom26.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass58 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        User user38 = null;
        Room room39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = reserveRoom29.reserveRoom(user38, room39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass56 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom19.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        java.lang.Class<?> wildcardClass51 = reserveRoom49.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        java.lang.Class<?> wildcardClass25 = reserveRoom22.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        User user58 = null;
        Room room59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = reserveRoom55.reserveRoom(user58, room59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        User user43 = null;
        Room room44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = reserveRoom35.reserveRoom(user43, room44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass48 = reserveRoom47.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom51.displayAvailableRooms();
        User user53 = null;
        Room room54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = reserveRoom51.reserveRoom(user53, room54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        java.lang.Class<?> wildcardClass19 = reserveRoom7.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom48.displayAvailableRooms();
        reserveRoom48.displayAvailableRooms();
        java.lang.Class<?> wildcardClass51 = reserveRoom48.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass63 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        java.lang.Class<?> wildcardClass50 = reserveRoom47.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        java.lang.Class<?> wildcardClass38 = reserveRoom31.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        java.lang.Class<?> wildcardClass24 = reserveRoom14.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom43.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        java.lang.Class<?> wildcardClass47 = reserveRoom43.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass56 = reserveRoom55.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        java.lang.Class<?> wildcardClass21 = reserveRoom16.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        java.lang.Class<?> wildcardClass62 = reserveRoom57.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom48.displayAvailableRooms();
        User user50 = null;
        Room room51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = reserveRoom48.reserveRoom(user50, room51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass63 = reserveRoom62.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom12.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        java.lang.Class<?> wildcardClass50 = reserveRoom45.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        reserveRoom30.displayAvailableRooms();
        User user37 = null;
        Room room38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = reserveRoom30.reserveRoom(user37, room38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        java.lang.Class<?> wildcardClass35 = reserveRoom24.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        java.lang.Class<?> wildcardClass60 = reserveRoom58.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom46.displayAvailableRooms();
        User user48 = null;
        Room room49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = reserveRoom46.reserveRoom(user48, room49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        User user39 = null;
        Room room40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = reserveRoom32.reserveRoom(user39, room40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass58 = reserveRoom57.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        java.lang.Class<?> wildcardClass32 = reserveRoom20.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        java.lang.Class<?> wildcardClass46 = reserveRoom43.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        User user25 = null;
        Room room26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = reserveRoom18.reserveRoom(user25, room26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        User user47 = null;
        Room room48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = reserveRoom43.reserveRoom(user47, room48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user65 = null;
        Room room66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = reserveRoom64.reserveRoom(user65, room66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        User user14 = null;
        Room room15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = reserveRoom4.reserveRoom(user14, room15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        User user64 = null;
        Room room65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = reserveRoom59.reserveRoom(user64, room65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom10.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        java.lang.Class<?> wildcardClass32 = reserveRoom11.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass65 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        User user49 = null;
        Room room50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = reserveRoom45.reserveRoom(user49, room50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass60 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        reserveRoom31.displayAvailableRooms();
        User user39 = null;
        Room room40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = reserveRoom31.reserveRoom(user39, room40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom55.displayAvailableRooms();
        java.lang.Class<?> wildcardClass57 = reserveRoom55.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom33.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        java.lang.Class<?> wildcardClass39 = reserveRoom33.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom25.displayAvailableRooms();
        reserveRoom25.displayAvailableRooms();
        reserveRoom25.displayAvailableRooms();
        java.lang.Class<?> wildcardClass29 = reserveRoom25.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom25.displayAvailableRooms();
        reserveRoom25.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom25.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom14.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        User user55 = null;
        Room room56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = reserveRoom49.reserveRoom(user55, room56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom22.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        java.lang.Class<?> wildcardClass61 = reserveRoom58.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        java.lang.Class<?> wildcardClass54 = reserveRoom51.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        User user51 = null;
        Room room52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = reserveRoom49.reserveRoom(user51, room52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        User user44 = null;
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = reserveRoom40.reserveRoom(user44, room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        User user59 = null;
        Room room60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = reserveRoom55.reserveRoom(user59, room60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom18.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        User user62 = null;
        Room room63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = reserveRoom59.reserveRoom(user62, room63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        java.lang.Class<?> wildcardClass17 = reserveRoom7.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        User user37 = null;
        Room room38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = reserveRoom33.reserveRoom(user37, room38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        java.lang.Class<?> wildcardClass40 = reserveRoom33.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass61 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass25 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        reserveRoom42.displayAvailableRooms();
        java.lang.Class<?> wildcardClass48 = reserveRoom42.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        reserveRoom40.displayAvailableRooms();
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom40.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom66.displayAvailableRooms();
        java.lang.Class<?> wildcardClass68 = reserveRoom66.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        java.lang.Class<?> wildcardClass62 = reserveRoom58.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        User user32 = null;
        Room room33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = reserveRoom27.reserveRoom(user32, room33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        User user28 = null;
        Room room29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = reserveRoom15.reserveRoom(user28, room29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        User user63 = null;
        Room room64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = reserveRoom61.reserveRoom(user63, room64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user63 = null;
        Room room64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = reserveRoom62.reserveRoom(user63, room64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        java.lang.Class<?> wildcardClass59 = reserveRoom57.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user60 = null;
        Room room61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = reserveRoom59.reserveRoom(user60, room61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom42.displayAvailableRooms();
        java.lang.Class<?> wildcardClass44 = reserveRoom42.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom44.displayAvailableRooms();
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom44.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom22.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom25.displayAvailableRooms();
        reserveRoom25.displayAvailableRooms();
        reserveRoom25.displayAvailableRooms();
        User user29 = null;
        Room room30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = reserveRoom25.reserveRoom(user29, room30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        reserveRoom18.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom18.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom52.displayAvailableRooms();
        reserveRoom52.displayAvailableRooms();
        User user55 = null;
        Room room56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = reserveRoom52.reserveRoom(user55, room56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        java.lang.Class<?> wildcardClass39 = reserveRoom34.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom52.displayAvailableRooms();
        User user54 = null;
        Room room55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = reserveRoom52.reserveRoom(user54, room55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom53.displayAvailableRooms();
        reserveRoom53.displayAvailableRooms();
        User user56 = null;
        Room room57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = reserveRoom53.reserveRoom(user56, room57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom62.displayAvailableRooms();
        java.lang.Class<?> wildcardClass64 = reserveRoom62.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom48.displayAvailableRooms();
        reserveRoom48.displayAvailableRooms();
        User user51 = null;
        Room room52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = reserveRoom48.reserveRoom(user51, room52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        User user60 = null;
        Room room61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = reserveRoom55.reserveRoom(user60, room61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass65 = reserveRoom64.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        User user56 = null;
        Room room57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = reserveRoom49.reserveRoom(user56, room57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user69 = null;
        Room room70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = reserveRoom68.reserveRoom(user69, room70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        java.lang.Class<?> wildcardClass41 = reserveRoom34.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass67 = reserveRoom66.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        User user36 = null;
        Room room37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = reserveRoom26.reserveRoom(user36, room37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        java.lang.Class<?> wildcardClass29 = reserveRoom11.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        java.lang.Class<?> wildcardClass31 = reserveRoom27.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        reserveRoom45.displayAvailableRooms();
        User user50 = null;
        Room room51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = reserveRoom45.reserveRoom(user50, room51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass59 = reserveRoom58.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        User user33 = null;
        Room room34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = reserveRoom27.reserveRoom(user33, room34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        java.lang.Class<?> wildcardClass57 = reserveRoom49.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        java.lang.Class<?> wildcardClass32 = reserveRoom27.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        User user39 = null;
        Room room40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = reserveRoom29.reserveRoom(user39, room40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        User user23 = null;
        Room room24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = reserveRoom3.reserveRoom(user23, room24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom64.displayAvailableRooms();
        java.lang.Class<?> wildcardClass66 = reserveRoom64.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        java.lang.Class<?> wildcardClass54 = reserveRoom49.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        User user64 = null;
        Room room65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = reserveRoom61.reserveRoom(user64, room65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        reserveRoom19.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom19.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        User user62 = null;
        Room room63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = reserveRoom57.reserveRoom(user62, room63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom67.displayAvailableRooms();
        reserveRoom67.displayAvailableRooms();
        java.lang.Class<?> wildcardClass70 = reserveRoom67.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        User user54 = null;
        Room room55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = reserveRoom51.reserveRoom(user54, room55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        java.lang.Class<?> wildcardClass63 = reserveRoom57.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass24 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        java.lang.Class<?> wildcardClass64 = reserveRoom61.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        java.lang.Class<?> wildcardClass42 = reserveRoom34.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        User user19 = null;
        Room room20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = reserveRoom9.reserveRoom(user19, room20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        User user54 = null;
        Room room55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = reserveRoom49.reserveRoom(user54, room55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        java.lang.Class<?> wildcardClass43 = reserveRoom35.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass23 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        User user19 = null;
        Room room20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = reserveRoom7.reserveRoom(user19, room20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        User user22 = null;
        Room room23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = reserveRoom13.reserveRoom(user22, room23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        reserveRoom22.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom22.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom63.displayAvailableRooms();
        reserveRoom63.displayAvailableRooms();
        User user66 = null;
        Room room67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = reserveRoom63.reserveRoom(user66, room67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom28.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom67.displayAvailableRooms();
        reserveRoom67.displayAvailableRooms();
        reserveRoom67.displayAvailableRooms();
        java.lang.Class<?> wildcardClass71 = reserveRoom67.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        reserveRoom17.displayAvailableRooms();
        java.lang.Class<?> wildcardClass29 = reserveRoom17.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom39.displayAvailableRooms();
        reserveRoom39.displayAvailableRooms();
        reserveRoom39.displayAvailableRooms();
        java.lang.Class<?> wildcardClass43 = reserveRoom39.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        User user27 = null;
        Room room28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = reserveRoom15.reserveRoom(user27, room28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        User user26 = null;
        Room room27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = reserveRoom10.reserveRoom(user26, room27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        User user65 = null;
        Room room66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = reserveRoom59.reserveRoom(user65, room66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        java.lang.Class<?> wildcardClass39 = reserveRoom32.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        User user63 = null;
        Room room64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = reserveRoom57.reserveRoom(user63, room64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom10.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user68 = null;
        Room room69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = reserveRoom67.reserveRoom(user68, room69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom53.displayAvailableRooms();
        reserveRoom53.displayAvailableRooms();
        java.lang.Class<?> wildcardClass56 = reserveRoom53.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        java.lang.Class<?> wildcardClass40 = reserveRoom32.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass64 = reserveRoom63.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        java.lang.Class<?> wildcardClass20 = reserveRoom7.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        User user17 = null;
        Room room18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = reserveRoom4.reserveRoom(user17, room18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        reserveRoom16.displayAvailableRooms();
        User user27 = null;
        Room room28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = reserveRoom16.reserveRoom(user27, room28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        reserveRoom13.displayAvailableRooms();
        java.lang.Class<?> wildcardClass22 = reserveRoom13.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        java.lang.Class<?> wildcardClass41 = reserveRoom36.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        User user65 = null;
        Room room66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = reserveRoom61.reserveRoom(user65, room66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass66 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom50.displayAvailableRooms();
        reserveRoom50.displayAvailableRooms();
        reserveRoom50.displayAvailableRooms();
        User user54 = null;
        Room room55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = reserveRoom50.reserveRoom(user54, room55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        java.lang.Class<?> wildcardClass46 = reserveRoom37.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom29.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        java.lang.Class<?> wildcardClass44 = reserveRoom38.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        reserveRoom38.displayAvailableRooms();
        java.lang.Class<?> wildcardClass46 = reserveRoom38.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        java.lang.Class<?> wildcardClass37 = reserveRoom26.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user71 = null;
        Room room72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = reserveRoom70.reserveRoom(user71, room72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        User user56 = null;
        Room room57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = reserveRoom51.reserveRoom(user56, room57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom63.displayAvailableRooms();
        reserveRoom63.displayAvailableRooms();
        reserveRoom63.displayAvailableRooms();
        reserveRoom63.displayAvailableRooms();
        java.lang.Class<?> wildcardClass68 = reserveRoom63.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        java.lang.Class<?> wildcardClass67 = reserveRoom61.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        reserveRoom14.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom14.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        java.lang.Class<?> wildcardClass55 = reserveRoom49.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass64 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom67.displayAvailableRooms();
        User user69 = null;
        Room room70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = reserveRoom67.reserveRoom(user69, room70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        java.lang.Class<?> wildcardClass16 = reserveRoom8.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        java.lang.Class<?> wildcardClass63 = reserveRoom59.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom64.displayAvailableRooms();
        User user66 = null;
        Room room67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = reserveRoom64.reserveRoom(user66, room67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        reserveRoom49.displayAvailableRooms();
        java.lang.Class<?> wildcardClass56 = reserveRoom49.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        User user24 = null;
        Room room25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = reserveRoom3.reserveRoom(user24, room25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        reserveRoom15.displayAvailableRooms();
        java.lang.Class<?> wildcardClass28 = reserveRoom15.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass71 = reserveRoom70.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        reserveRoom57.displayAvailableRooms();
        User user61 = null;
        Room room62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = reserveRoom57.reserveRoom(user61, room62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        java.lang.Class<?> wildcardClass65 = reserveRoom59.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        java.lang.Class<?> wildcardClass63 = reserveRoom61.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        reserveRoom4.displayAvailableRooms();
        java.lang.Class<?> wildcardClass16 = reserveRoom4.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom43.displayAvailableRooms();
        java.lang.Class<?> wildcardClass45 = reserveRoom43.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom68.displayAvailableRooms();
        User user70 = null;
        Room room71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = reserveRoom68.reserveRoom(user70, room71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        User user39 = null;
        Room room40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = reserveRoom33.reserveRoom(user39, room40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        reserveRoom23.displayAvailableRooms();
        User user31 = null;
        Room room32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = reserveRoom23.reserveRoom(user31, room32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom32.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        reserveRoom26.displayAvailableRooms();
        java.lang.Class<?> wildcardClass35 = reserveRoom26.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        java.lang.Class<?> wildcardClass19 = reserveRoom9.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        reserveRoom47.displayAvailableRooms();
        java.lang.Class<?> wildcardClass51 = reserveRoom47.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        java.lang.Class<?> wildcardClass44 = reserveRoom41.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        java.lang.Class<?> wildcardClass33 = reserveRoom11.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        reserveRoom43.displayAvailableRooms();
        User user49 = null;
        Room room50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = reserveRoom43.reserveRoom(user49, room50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        java.lang.Class<?> wildcardClass33 = reserveRoom20.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        java.lang.Class<?> wildcardClass39 = reserveRoom28.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        reserveRoom59.displayAvailableRooms();
        User user63 = null;
        Room room64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = reserveRoom59.reserveRoom(user63, room64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        reserveRoom51.displayAvailableRooms();
        User user55 = null;
        Room room56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = reserveRoom51.reserveRoom(user55, room56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        reserveRoom41.displayAvailableRooms();
        User user47 = null;
        Room room48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = reserveRoom41.reserveRoom(user47, room48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        User user32 = null;
        Room room33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = reserveRoom11.reserveRoom(user32, room33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        java.lang.Class<?> wildcardClass34 = reserveRoom28.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom55.displayAvailableRooms();
        reserveRoom55.displayAvailableRooms();
        java.lang.Class<?> wildcardClass58 = reserveRoom55.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        reserveRoom36.displayAvailableRooms();
        User user41 = null;
        Room room42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = reserveRoom36.reserveRoom(user41, room42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom54.displayAvailableRooms();
        reserveRoom54.displayAvailableRooms();
        reserveRoom54.displayAvailableRooms();
        java.lang.Class<?> wildcardClass58 = reserveRoom54.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        User user33 = null;
        Room room34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = reserveRoom20.reserveRoom(user33, room34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        User user63 = null;
        Room room64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = reserveRoom58.reserveRoom(user63, room64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        reserveRoom35.displayAvailableRooms();
        User user44 = null;
        Room room45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = reserveRoom35.reserveRoom(user44, room45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass68 = reserveRoom67.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        reserveRoom21.displayAvailableRooms();
        java.lang.Class<?> wildcardClass30 = reserveRoom21.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom67.displayAvailableRooms();
        reserveRoom67.displayAvailableRooms();
        reserveRoom67.displayAvailableRooms();
        reserveRoom67.displayAvailableRooms();
        java.lang.Class<?> wildcardClass72 = reserveRoom67.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        reserveRoom7.displayAvailableRooms();
        User user18 = null;
        Room room19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = reserveRoom7.reserveRoom(user18, room19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        reserveRoom33.displayAvailableRooms();
        User user40 = null;
        Room room41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = reserveRoom33.reserveRoom(user40, room41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        reserveRoom12.displayAvailableRooms();
        java.lang.Class<?> wildcardClass26 = reserveRoom12.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        reserveRoom27.displayAvailableRooms();
        java.lang.Class<?> wildcardClass33 = reserveRoom27.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        java.lang.Class<?> wildcardClass38 = reserveRoom28.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        User user38 = null;
        Room room39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = reserveRoom28.reserveRoom(user38, room39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        reserveRoom58.displayAvailableRooms();
        java.lang.Class<?> wildcardClass63 = reserveRoom58.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        User user46 = null;
        Room room47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = reserveRoom37.reserveRoom(user46, room47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass71 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass66 = reserveRoom65.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        reserveRoom32.displayAvailableRooms();
        User user37 = null;
        Room room38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = reserveRoom32.reserveRoom(user37, room38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        User user15 = null;
        Room room16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = reserveRoom5.reserveRoom(user15, room16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        reserveRoom34.displayAvailableRooms();
        User user42 = null;
        Room room43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = reserveRoom34.reserveRoom(user42, room43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        java.lang.Class<?> wildcardClass27 = reserveRoom10.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        reserveRoom24.displayAvailableRooms();
        java.lang.Class<?> wildcardClass34 = reserveRoom24.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        reserveRoom37.displayAvailableRooms();
        User user47 = null;
        Room room48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = reserveRoom37.reserveRoom(user47, room48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        reserveRoom61.displayAvailableRooms();
        User user69 = null;
        Room room70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = reserveRoom61.reserveRoom(user69, room70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        reserveRoom5.displayAvailableRooms();
        java.lang.Class<?> wildcardClass16 = reserveRoom5.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        reserveRoom10.displayAvailableRooms();
        User user27 = null;
        Room room28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = reserveRoom10.reserveRoom(user27, room28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        reserveRoom3.displayAvailableRooms();
        java.lang.Class<?> wildcardClass24 = reserveRoom3.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom70.displayAvailableRooms();
        java.lang.Class<?> wildcardClass72 = reserveRoom70.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        reserveRoom28.displayAvailableRooms();
        java.lang.Class<?> wildcardClass36 = reserveRoom28.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        reserveRoom29.displayAvailableRooms();
        User user41 = null;
        Room room42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = reserveRoom29.reserveRoom(user41, room42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        reserveRoom8.displayAvailableRooms();
        User user16 = null;
        Room room17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = reserveRoom8.reserveRoom(user16, room17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        reserveRoom11.displayAvailableRooms();
        User user31 = null;
        Room room32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = reserveRoom11.reserveRoom(user31, room32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        reserveRoom9.displayAvailableRooms();
        User user20 = null;
        Room room21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = reserveRoom9.reserveRoom(user20, room21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom71 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom72 = new ReserveRoom((java.util.List<Room>) roomList1);
        java.lang.Class<?> wildcardClass73 = roomList1.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        reserveRoom20.displayAvailableRooms();
        java.lang.Class<?> wildcardClass30 = reserveRoom20.getClass();
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user70 = null;
        Room room71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = reserveRoom69.reserveRoom(user70, room71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        reserveRoom62.displayAvailableRooms();
        User user64 = null;
        Room room65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = reserveRoom62.reserveRoom(user64, room65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom71 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom72 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom73 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user74 = null;
        Room room75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = reserveRoom73.reserveRoom(user74, room75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        Room[] roomArray0 = new Room[] {};
        java.util.ArrayList<Room> roomList1 = new java.util.ArrayList<Room>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Room>) roomList1, roomArray0);
        ReserveRoom reserveRoom3 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom4 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom5 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom6 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom7 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom8 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom9 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom10 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom11 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom12 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom13 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom14 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom15 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom16 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom17 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom18 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom19 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom20 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom21 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom22 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom23 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom24 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom25 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom26 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom27 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom28 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom29 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom30 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom31 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom32 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom33 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom34 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom35 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom36 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom37 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom38 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom39 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom40 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom41 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom42 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom43 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom44 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom45 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom46 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom47 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom48 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom49 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom50 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom51 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom52 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom53 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom54 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom55 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom56 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom57 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom58 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom59 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom60 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom61 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom62 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom63 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom64 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom65 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom66 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom67 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom68 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom69 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom70 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom71 = new ReserveRoom((java.util.List<Room>) roomList1);
        ReserveRoom reserveRoom72 = new ReserveRoom((java.util.List<Room>) roomList1);
        User user73 = null;
        Room room74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = reserveRoom72.reserveRoom(user73, room74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(roomArray0);
        org.junit.Assert.assertArrayEquals(roomArray0, new Room[] {});
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }
}

